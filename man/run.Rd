% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/forsys_run.R
\name{run}
\alias{run}
\title{ForSysR}
\usage{
run(
  config_file = NULL,
  return_outputs = FALSE,
  write_outputs = TRUE,
  stand_data = NULL,
  stand_data_filename = "",
  stand_id_field = "",
  stand_area_field = NULL,
  stand_threshold = NULL,
  global_threshold = NULL,
  normalize_values = TRUE,
  proj_id_field = "proj_id",
  proj_fixed_target = TRUE,
  proj_target_field = NULL,
  proj_target_value = NULL,
  proj_target_min_value = -Inf,
  proj_treatment_name = "",
  scenario_name = "",
  scenario_priorities = NULL,
  scenario_weighting_values = "1 1 1",
  scenario_output_fields = NULL,
  scenario_output_grouping_fields = NULL,
  scenario_write_tags = NULL,
  overwrite_output = TRUE,
  run_with_shiny = FALSE,
  run_with_patchmax = FALSE,
  run_with_fire = FALSE,
  fire_intersect_table = NULL,
  fire_intersect_table_filename = NULL,
  fire_planning_years = 1,
  fire_annual_target_field = NULL,
  fire_annual_target = NA,
  fire_dynamic_forsys = FALSE,
  fire_random_projects = FALSE,
  patchmax_proj_number = 1,
  patchmax_proj_size = Inf,
  patchmax_proj_size_slack = 0.05,
  patchmax_sample_frac = 0.1,
  patchmax_st_seed = NULL,
  patchmax_SDW = 0.5,
  patchmax_EPW = 0.5
)
}
\arguments{
\item{config_file}{character. Relative path to a config file that defines needed parameters}

\item{return_outputs}{logical. Return project and stand directly}

\item{write_outputs}{logical. Write project and stand data to file}

\item{stand_data}{data.frame, data.table, sf. Stand dataset}

\item{stand_data_filename}{character. Path to the input dataset}

\item{stand_id_field}{character. Field containing unique ID for each stand}

\item{stand_area_field}{character. Field containing stand area}

\item{stand_threshold}{character. Boolean statement passed as a string and used as threshold for whether stands are counted towards project objective}

\item{global_threshold}{character. Boolean statement passed as a string used to define  stands within the scenario. Excluded stands are not considered part of the problem so are not used to calculate PCP or ESum values.}

\item{normalize_values}{logical. Whether spm fields should be normalized}

\item{proj_id_field}{character. Field in the stand_data_filename that indicates which planning area a stand belongs to.}

\item{proj_fixed_target}{logical. Is target is fixed or relative?}

\item{proj_target_field}{character. Field name used as target constraint}

\item{proj_target_value}{numeric. Value for target constraint, either an fixed value if proj_fixed_target == TRUE or a value between 0 and 1 if proj_fixed_target is FALSE.}

\item{proj_target_min_value}{}

\item{proj_treatment_name}{optional character. String appended to output used to name treatment}

\item{scenario_name}{character. Name for this scenario}

\item{scenario_priorities}{character vector. Scenario priorities.}

\item{scenario_weighting_values}{character. String of 3 integers separated by a space that defines the weighting min, max, and step.}

\item{scenario_output_fields}{character vector. Field names to write out}

\item{scenario_output_grouping_fields}{character vector. Field(s) for grouping of treated stands.}

\item{scenario_write_tags}{optional character. String appended to output used to describe scenario}

\item{overwrite_output}{logical. Whether to overwrite any existing output of the same name}

\item{run_with_shiny}{logical. Whether run was called from within shiny.}

\item{run_with_patchmax}{logical. Whether PatchMax should be used for building projects}

\item{run_with_fire}{logical. Whether to forsys alongside fire}

\item{fire_intersect_table}{data.frame. Stands affected by fire by year}

\item{fire_intersect_table_filename}{character File name of data frame listing stands affected by fire by year}

\item{fire_planning_years}{integer. Number of years to run forsys}

\item{fire_annual_target_field}{character. Field to use for calculating annual target}

\item{fire_annual_target}{numeric. Value of annual cumulative target}

\item{fire_dynamic_forsys}{logical. Prevent burnt stands from being selected if TRUE}

\item{fire_random_projects}{logical. Randomly shuffle project prioritization if TRUE}

\item{patchmax_proj_number}{integer. Number of projects to build}

\item{patchmax_proj_size}{integer. Target area for each project}

\item{patchmax_proj_size_slack}{numeric 0-1. Percent less than project allowable}

\item{patchmax_sample_frac}{numeric 0-1. Percent of stands to search}

\item{patchmax_st_seed}{numeric/character vector. Specific stand IDs to search}

\item{patchmax_SDW}{numeric 0-1. Stand distance weight parameter. Default is 0.5.}

\item{patchmax_EPW}{numeric 0-1. Stand exclusion weight parameter. Default is 0.5.}
}
\value{
Forsys results with weightedPriority, treatmentRank, and weights
}
\description{
Primary function for running the ForSys treatment planner. Either provide
parameters, or define parameters in a config file and pass the name of the
file to this run function.
}
